package com.weathertopper.test001;

import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.InterModComms;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.lifecycle.InterModEnqueueEvent;
import net.minecraftforge.fml.event.lifecycle.InterModProcessEvent;
import net.minecraftforge.fml.event.server.FMLServerStartingEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.util.stream.Collectors;

// The value here should match an entry in the META-INF/mods.toml file
@Mod("test001")
public class Test001
{
    // Directly reference a log4j logger.
    private static final Logger LOGGER = LogManager.getLogger();

    public Test001() {
        // Register ourselves for server and other game events we are interested in
        MinecraftForge.EVENT_BUS.register(this);
    }

    @SubscribeEvent
    public void onHurt(LivingHurtEvent event) {
        try {
            Entity attacker = event.getSource().getImmediateSource();
            if (attacker instanceof EntityPlayer) {
                Entity injured = event.getEntity();
                DamageSource injury = event.getSource();

                LOGGER.info(">>> " + attacker.getName().getString() +
                        " hurt " + injured.getName().getString() +
                        " with " + injury.getDamageType());

                World world = event.getEntityLiving().getEntityWorld();
                EntityPlayer player = (EntityPlayer) attacker;
                ItemStack mainHandIemStack = player.getItemStackFromSlot(EntityEquipmentSlot.MAINHAND);

                if (mainHandIemStack.getItem().equals(Items.GOLDEN_AXE) &&
                        mainHandIemStack.getDisplayName().getString().equalsIgnoreCase("stormbreaker")) {

                    // Summon lightning
                    world.addWeatherEffect(new EntityLightningBolt(
                            world,
                            event.getEntity().posX,
                            event.getEntity().posY,
                            event.getEntity().posZ,
                            false));

                    // Make an explosion
                    world.createExplosion(
                            event.getEntity(),
                            event.getEntity().posX,
                            event.getEntity().posY,
                            event.getEntity().posZ,
                            8,
                            true);
                }
            }
        } catch (Exception ex) {
            LOGGER.error(ex.getMessage(), ex);
        }
    }
}
